@using FPTBlog.Src.PostModule.Entity
@{
    var statusSearch = (SelectList)this.ViewData["statusSearch"];
    var approvedStatus = (SelectList)this.ViewData["approvedStatus"];
    var listPosts = (List<Post>)ViewData["posts"];
    var total = (int)ViewData["total"];
    var PostThisMonth = (int)this.ViewData["postThisMonth"];
    var PostLastMonth = (int)this.ViewData["postLastMonth"];
    var ViewThisMonth = (int)this.ViewData["viewThisMonth"];
    var ViewLastMonth = (int)this.ViewData["viewLastMonth"];
    var InteractThisMonth = (int)this.ViewData["interactLastMonth"];
    var InteractLastMonth = (int)this.ViewData["interactLastMonth"];
    var UserThisMonth = (int)this.ViewData["userThisMonth"];
    var UserLastMonth = (int)this.ViewData["userLastMonth"];
}

<div class="space-y-2">
    <h1 class="text-2xl font-semibold "> Post Management</h1>
    <div>
        <h3 class="text-lg font-medium leading-6 text-gray-900">
            Last 30 days
        </h3>
        <dl
            class="grid grid-cols-1 mt-5 overflow-hidden bg-white divide-y divide-gray-200 rounded-lg shadow md:grid-cols-4 md:divide-y-0 md:divide-x">
            <div class="px-4 py-5 sm:p-6">
                <dt class="text-base font-normal text-gray-900">
                    New Post
                </dt>
                <dd class="flex items-baseline justify-between mt-1 md:block lg:flex">
                    <div class="flex items-baseline text-2xl font-semibold text-tango-600">
                        @ViewData["postThisMonth"]
                        <span class="ml-2 text-sm font-medium text-gray-500">
                            @ViewData["postLastMonth"]
                        </span>
                    </div>

                    @await Html.PartialAsync("../../Components/Common/UpDownBadge.cshtml", new { ThisMonth =
                    PostThisMonth,
                    LastMonth = PostLastMonth})
                </dd>
            </div>

            <div class="px-4 py-5 sm:p-6">
                <dt class="text-base font-normal text-gray-900">
                    Active View
                </dt>
                <dd class="flex items-baseline justify-between mt-1 md:block lg:flex">
                    <div class="flex items-baseline text-2xl font-semibold text-tango-600">
                        @ViewData["viewThisMonth"]
                        <span class="ml-2 text-sm font-medium text-gray-500">
                            @ViewData["viewLastMonth"]
                        </span>
                    </div>

                    @await Html.PartialAsync("../../Components/Common/UpDownBadge.cshtml", new { ThisMonth =
                    ViewThisMonth,
                    LastMonth = ViewLastMonth})
                </dd>
            </div>

            <div class="px-4 py-5 sm:p-6">
                <dt class="text-base font-normal text-gray-900">
                    Total Interaction
                </dt>
                <dd class="flex items-baseline justify-between mt-1 md:block lg:flex">
                    <div class="flex items-baseline text-2xl font-semibold text-tango-600">
                        @ViewData["interactThisMonth"]
                        <span class="ml-2 text-sm font-medium text-gray-500">
                            @ViewData["interactLastMonth"]
                        </span>
                    </div>
                    @await Html.PartialAsync("../../Components/Common/UpDownBadge.cshtml", new { ThisMonth
                    =InteractThisMonth, LastMonth = InteractLastMonth})
                </dd>
            </div>

            <div class="px-4 py-5 sm:p-6">
                <dt class="text-base font-normal text-gray-900">
                    New User
                </dt>
                <dd class="flex items-baseline justify-between mt-1 md:block lg:flex">
                    <div class="flex items-baseline text-2xl font-semibold text-tango-600">
                        @ViewData["userThisMonth"]
                        <span class="ml-2 text-sm font-medium text-gray-500">
                            @ViewData["userLastMonth"]
                        </span>
                    </div>

                    @await Html.PartialAsync("../../Components/Common/UpDownBadge.cshtml", new { ThisMonth
                    =UserThisMonth,
                    LastMonth = UserLastMonth})
                </dd>
            </div>
        </dl>
    </div>

    <!-- This example requires Tailwind CSS v2.0+ -->


    <div class="px-4 py-2 space-y-4 border-b border-gray-200 rounded-lg shadow ">

        <div class="flex items-end justify-between">

            <form class="flex items-end space-x-4 " id="listPostForm">

                @await Html.PartialAsync("../../Components/Form/TextField.cshtml",
                new { Name = "searchName", Label = "Search", Type = "text", Value = (string)
                this.Context.Request.Query["searchName"] ?? "" , PlaceHolder= "Name", IsLabel = false
                })

                @await Html.PartialAsync("../../Components/Form/FormDropList.cshtml",
                new { Name = "searchStatus", Label = "Status", Type = "text", Value = (string)
                this.Context.Request.Query["searchStatus"] ?? "" , IsLabel = false, List = statusSearch
                })

                @await Html.PartialAsync("../../Components/Form/FormHidden.cshtml",
                new { Name = "pageSize", Value = (string) this.Context.Request.Query["pageSize"] ?? "12" })
                @await Html.PartialAsync("../../Components/Form/FormHidden.cshtml",
                new { Name = "pageIndex",Value = (string) this.Context.Request.Query["pageIndex"] ?? "0" })



                <div class="my-1">
                    @await Html.PartialAsync("../../Components/Form/FormBtn.cshtml",
                    new { Label = "Search", Icon = "../../Components/Icons/Search.cshtml" })
                </div>
                <div class="my-1">
                    <button
                        class="inline-flex items-center px-4 py-2 text-sm font-medium text-white border border-transparent rounded-md shadow-sm bg-tango-600 hover:bg-tango-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-tango-500">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2 -ml-1" viewBox="0 0 20 20"
                            fill="currentColor">
                            <path
                                d="M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z" />
                        </svg>
                        View Chart
                    </button>
                </div>
            </form>

        </div>
    </div>
    <div class="mt-2 overflow-hidden border-b border-gray-200 rounded-lg shadow intro-y">
        <table class="min-w-full divide-y divide-gray-200 ">
            <thead class="bg-tango-100">
                <tr>
                    <th scope="col"
                        class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                        #
                    </th>
                    <th scope="col"
                        class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                        Title
                    </th>
                    <th scope="col"
                        class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                        Student
                    </th>
                    <th scope="col"
                        class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                        Status
                    </th>
                    <th scope="col"
                        class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                        Create Date
                    </th>

                    <th scope="col" class="relative px-6 py-3">
                        <span class="sr-only">Edit</span>
                    </th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200 fade-in">

                @for (int i = 0; i < listPosts.Count; i++)
                {
                    var item = listPosts[i];
                    var previewLink = $"{Routers.PostGetPreview.Link}?PostId={item.PostId}";

                    <tr class="duration-200 hover:bg-indigo-100">
                        <td class="px-6 py-4 text-sm font-medium text-gray-900 whitespace-nowrap ">
                            @(i+1)
                        </td>
                        <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                            @item.Title
                        </td>
                        <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                            @item.Student.Name
                        </td>
                        <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                            @if (item.Status == PostStatus.WAIT)
                            {
                                <button class="modal-btn" data-postId="@item.PostId" data-title="@item.Title">
                                    @await Html.PartialAsync("../../Components/Table/PostStatusEdit.cshtml",item.Status)
                                </button>
                            }
                            else
                            {
                                @await Html.PartialAsync("../../Components/Table/PostStatusEdit.cshtml",item.Status)
                            }
                        </td>
                        <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                            @item.CreateDate
                        </td>
                        <td class="px-6 py-4 text-sm font-medium text-right whitespace-nowrap">
                            <a href="@previewLink" target="_blank" class="text-indigo-600 hover:text-indigo-900">View
                                Post</a>
                        </td>
                    </tr>
                }


            </tbody>
        </table>
        <!-- This example requires Tailwind CSS v2.0+ -->




        @await Html.PartialAsync("../../Components/Pagination/Pagination.cshtml",
        new { PageIndex = (string) this.Context.Request.Query["pageIndex"] ?? "0", PageSize = (string)
        this.Context.Request.Query["pageSize"]?? "12", Total = total })
    </div>
</div>



<div class="fixed inset-0 invisible overflow-hidden" aria-labelledby="slide-over-title" role="dialog" aria-modal="true"
    id="modal-wrapper">
    <div class="absolute inset-0 overflow-hidden">

        <div class="absolute inset-0 transition-opacity bg-gray-500 bg-opacity-75" aria-hidden="true" id="modal-bg">
        </div>

        <div class="fixed inset-y-0 right-0 flex max-w-full pl-10">

            <div class="w-screen max-w-md transition duration-500 ease-in-out transform translate-x-full sm:duration-700"
                id="modal-panel">
                <div class="flex flex-col h-full py-6 overflow-y-scroll bg-white shadow-xl">
                    <div class="px-4 sm:px-6">
                        <div class="flex items-start justify-between">
                            <h2 class="text-lg font-medium text-gray-900" id="slide-over-title">
                                Approved Post
                            </h2>
                            <div class="flex items-center ml-3 h-7">
                                <button type="button" id="modal-btn-close"
                                    class="text-gray-400 bg-white rounded-md hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                    <span class="sr-only">Close panel</span>
                                    <!-- Heroicon name: outline/x -->
                                    <svg class="w-6 h-6" xmlns="http://www.w3.org/2000/svg" fill="none"
                                        viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M6 18L18 6M6 6l12 12" />
                                    </svg>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="relative flex-1 px-4 mt-6 sm:px-6">
                        <!-- Replace with your content -->
                        <div class="absolute inset-0 px-4 sm:px-6">
                            <div class="h-full border-gray-200" aria-hidden="true">
                                @await Html.PartialAsync("../../Components/Form/FormMsg.cshtml")


                                <form class="space-y-4" id="approvedPostForm">
                                    <a href="hello" id="postLink" target="_blank"
                                        class="text-sm font-medium text-indigo-600 hover:text-indigo-900">View
                                        Post</a>

                                    <div>
                                        <label for="approvedStatus"
                                            class="block text-sm font-medium text-gray-700">Title</label>

                                        <div id="postName"
                                            class="block w-full py-2 pl-3 pr-10 mt-1 text-base border border-gray-300 rounded-md focus:outline-none focus:ring-tango-500 focus:border-tango-500 sm:text-sm">

                                        </div>

                                    </div>

                                    @await Html.PartialAsync("../../Components/Form/FormDropList.cshtml",
                                    new { Name = "approvedStatus", Label = "Status", Type = "text", Value =
                                    PostStatus.APPROVED.ToString() , IsLabel = false, List =
                                    approvedStatus
                                    })

                                    @await Html.PartialAsync("../../Components/Form/TextareaField.cshtml",
                                    new { Name = "note", Label = "Note", Value = "" })


                                    @await Html.PartialAsync("../../Components/Form/FormBtn.cshtml",
                                    new { Label = "Submit",Icon = "../../Components/Icons/ApprovedPost.cshtml" })
                                </form>
                            </div>
                        </div>
                        <!-- /End replace -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {

<script src="/js/post-list.js"></script>
}

@using FPTBlog.Src.NotificationModule.Entity

@{
    var notifications = (List<Notification>)this.ViewData["notifications"];
    var total = (int)this.ViewData["total"];
    var levelSearch = (SelectList)this.ViewData["levelSearch"];
    var level = (SelectList)this.ViewData["level"];
    var now = DateTime.Now;

}

<div class="px-4 py-2 space-y-4 border-b border-gray-200 rounded-lg shadow ">
    <h1 class="text-2xl font-semibold ">Notication Management</h1>
    <div class="flex items-end justify-between">

        <form class="flex items-end space-x-4 " id="listNotificationForm">
            @await Html.PartialAsync("../../Components/Form/TextField.cshtml",
            new { Name = "search", Label = "Search", Type = "text", Value = (string)
            this.Context.Request.Query["search"] ?? "" , PlaceHolder= "", IsLabel = false
            })

            @await Html.PartialAsync("../../Components/Form/FormDropList.cshtml",
            new { Name = "searchLevel", Label = "Level", Type = "text", Value = (string)
            this.Context.Request.Query["searchLevel"] ?? "" , IsLabel = false, List = levelSearch
            })

            @await Html.PartialAsync("../../Components/Form/TextField.cshtml",
            new { Name = "startDate", Label = "Start Date", Type = "date", Value = (string)
            this.Context.Request.Query["startDate"] ?? now.AddYears(-5).ToString("yyyy-MM-dd") , IsLabel = false
            })

            @await Html.PartialAsync("../../Components/Form/TextField.cshtml",
            new { Name = "endDate", Label = "End Date", Type = "date", Value = (string)
            this.Context.Request.Query["endDate"] ?? now.AddYears(5).ToString("yyyy-MM-dd") , IsLabel = false
            })

            @await Html.PartialAsync("../../Components/Form/FormHidden.cshtml",
            new { Name = "pageSize", Value = (string) this.Context.Request.Query["pageSize"] ?? "12" })
            @await Html.PartialAsync("../../Components/Form/FormHidden.cshtml",
            new { Name = "pageIndex",Value = (string) this.Context.Request.Query["pageIndex"] ?? "0" })

            <div class="my-1">
                @await Html.PartialAsync("../../Components/Form/FormBtn.cshtml",
                new { Label = "Search", Icon = "../../Components/Icons/Search.cshtml" })
            </div>
        </form>
    </div>
    <div id="chart">

    </div>
</div>
<div class="mt-2 overflow-hidden border-b border-gray-200 rounded-lg shadow intro-y">
    <table class="min-w-full divide-y divide-gray-200 ">
        <thead class="bg-tango-100">
            <tr>
                <th scope="col" class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                    #
                </th>
                <th scope="col" class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                    Receiver
                </th>
                <th scope="col" class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                    Username/Email
                </th>
                <th scope="col" class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                    Notification ID
                </th>
                <th scope="col" class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                    Level
                </th>
                <th scope="col" class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                    Create Date
                </th>

                <th scope="col" class="relative px-6 py-3">
                    <span class="sr-only">View more</span>
                </th>
            </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200 fade-in">
            @for (int i = 0; i < notifications.Count; i++)
            {
                var item = notifications[i];

                <tr class="duration-200 hover:bg-indigo-100">
                    <td class="px-6 py-4 text-sm font-medium text-gray-900 whitespace-nowrap ">
                        @(i+1)
                    </td>
                    <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                        @item.Receiver.Name
                    </td>
                    <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                        @if (item.Receiver.Email != "")
                        {
                            @item.Receiver.Email
                        }
                        else
                        {
                            @item.Receiver.Username
                        }
                    </td>
                    <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                        @item.NotificationId
                    </td>
                    <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                        @if (item.Level == NotificationLevel.BANNED)
                        {
                            <span class="text-xs font-semibold text-red-500 capitalize"> @item.Level.ToString().ToLower()</span>
                        }
                        @if (item.Level == NotificationLevel.INFORMATION)
                        {
                            <span class="text-xs font-semibold text-green-500 capitalize">
                                @item.Level.ToString().ToLower()</span>
                        }
                        @if (item.Level == NotificationLevel.WARNING)
                        {
                            <span class="text-xs font-semibold text-yellow-500 capitalize">
                                @item.Level.ToString().ToLower()</span>
                        }


                    </td>
                    <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                        @item.CreateDate
                    </td>
                    <td class="px-6 py-4 text-right whitespace-nowrap">
                        <button class="text-sm font-medium text-indigo-600 hover:text-indigo-900 view-more"
                        data-notificationId="@item.NotificationId">View Detail</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @await Html.PartialAsync("../../Components/Pagination/Pagination.cshtml",
    new { PageIndex = (string) this.Context.Request.Query["pageIndex"] ?? "0", PageSize = (string)
    this.Context.Request.Query["pageSize"]?? "12", Total = total })
</div>

<div class="fixed inset-0 z-10 invisible overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true"
    id="modal-wrapper">
    <div class="flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">

        <div class="fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75" aria-hidden="true" id="modal-bg">
        </div>

        <!-- This element is to trick the browser into centering the modal contents. -->
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

        <div id="modal-panel"
            class="inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6">
            <div class="absolute top-0 right-0 hidden pt-4 pr-4 sm:block">
                <button type="button" id="modal-btn-close"
                    class="text-gray-400 bg-white rounded-md hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-tango-500">
                    <span class="sr-only">Close</span>
                    <!-- Heroicon name: outline/x -->
                    <svg class="w-6 h-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <div class="hidden sm:flex sm:items-start">
                <div class="flex-1 mt-3">
                    <h3 class="text-lg font-medium leading-6 text-gray-900 ">
                        Notification Detail
                    </h3>
                    <div id="notification-content">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {

<script src="/js/notification-list.js"></script>
}

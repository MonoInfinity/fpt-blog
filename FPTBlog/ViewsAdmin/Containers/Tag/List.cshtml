@using FPTBlog.Src.TagModule.Entity
@{
    var listTags = (List<IDictionary<string, object>>)this.ViewData["tags"];
    var total = (int)this.ViewData["total"];
    var statusSearch = (SelectList)this.ViewData["statusSearch"];

    var hotTrendingTagName = (string)this.ViewData["hotTrendingTagName"];
    var numOfTagsCreatedCurrentMonth = (int)this.ViewData["numOfTagsCreatedCurrentMonth"];
    var numOfTagsCreatedLastMonth = (int)this.ViewData["numOfTagsCreatedLastMonth"];

}

<div class="px-4 py-2 space-y-4 border-b border-gray-200 rounded-lg shadow ">
    <h1 class="text-2xl font-semibold ">Tag Management</h1>
    <div class="flex items-end justify-between">

        <form class="flex items-end space-x-4 " id="listTagForm">
            @await Html.PartialAsync("../../Components/Form/TextField.cshtml",
            new { Name = "searchName", Label = "Search", Type = "text", Value = (string)
            this.Context.Request.Query["searchName"] ?? "" , PlaceHolder= "Name", IsLabel = false
            })

            @await Html.PartialAsync("../../Components/Form/FormDropList.cshtml",
            new { Name = "searchStatus", Label = "Status", Type = "text", Value = (string)
            this.Context.Request.Query["searchStatus"] ?? "" , IsLabel = false, List = statusSearch
            })

            @await Html.PartialAsync("../../Components/Form/FormHidden.cshtml",
            new { Name = "pageSize", Value = (string) this.Context.Request.Query["pageSize"] ?? "12" })
            @await Html.PartialAsync("../../Components/Form/FormHidden.cshtml",
            new { Name = "pageIndex",Value = (string) this.Context.Request.Query["pageIndex"] ?? "0" })



            <div class="my-1">
                @await Html.PartialAsync("../../Components/Form/FormBtn.cshtml",
                new { Label = "Search", Icon = "../../Components/Icons/Search.cshtml" })
            </div>
            <div class="my-1">
                <button type="button" id="clear-unused-tag"
                    class="inline-flex items-center px-4 py-2 text-sm font-medium text-white border border-transparent rounded-md shadow-sm bg-tango-600 hover:bg-tango-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-tango-500">
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2 -ml-1" viewBox="0 0 20 20"
                        fill="currentColor">
                        <path d="M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z" />
                        <path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M8 11h4" />
                    </svg>
                    Clear Unused Tag
                </button>
            </div>

            <div class="my-1">
                @await Html.PartialAsync("../../Components/Form/BtnFuncIcon.cshtml",
                new { Label = "View Chart", Icon = "../../Components/Icons/ViewChart.cshtml", Id="view-chart" })
            </div>
        </form>

        <!-- This example requires Tailwind CSS v2.0+ -->
        <div class="intro-y">
            <dl class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                <div>
                    <dt>
                        <div class="absolute p-3 rounded-md bg-tango-500">
                            <!-- Heroicon name: outline/users -->
                            <svg width="20" height="20" viewBox="0 0 20 20" fill="none"
                                xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" clip-rule="evenodd"
                                    d="M10 3C10.5523 3 11 3.44772 11 4V9H16C16.5523 9 17 9.44772 17 10C17 10.5523 16.5523 11 16 11H11V16C11 16.5523 10.5523 17 10 17C9.44772 17 9 16.5523 9 16V11H4C3.44772 11 3 10.5523 3 10C3 9.44771 3.44772 9 4 9L9 9V4C9 3.44772 9.44772 3 10 3Z"
                                    fill="white" />
                            </svg>

                        </div>
                        <p class="text-sm font-medium text-gray-500 truncate ml-14">Total New Tag (30d)</p>
                    </dt>
                    <dd class="flex items-baseline pb-2 space-x-2 ml-14 sm:pb-3">
                        <div class="flex items-baseline text-2xl font-semibold text-tango-600">
                            @numOfTagsCreatedCurrentMonth
                            <span class="ml-2 text-sm font-medium text-gray-500">
                                @numOfTagsCreatedLastMonth
                            </span>
                        </div>

                        @await Html.PartialAsync("../../Components/Common/UpDownBadge.cshtml", new { ThisMonth
                        =numOfTagsCreatedCurrentMonth, LastMonth = numOfTagsCreatedLastMonth})
                    </dd>
                </div>
                <div>
                    <dt>
                        <div class="absolute p-3 rounded-md bg-tango-500">
                            <!-- Heroicon name: outline/users -->
                            <svg width="20" height="20" viewBox="0 0 20 20" fill="none"
                                xmlns="http://www.w3.org/2000/svg">
                                <path
                                    d="M11.0836 6.7585L12.1836 8.9585C12.3336 9.2585 12.7336 9.55849 13.067 9.60849L15.0586 9.94182C16.3336 10.1585 16.6336 11.0752 15.717 11.9918L14.167 13.5418C13.9086 13.8002 13.7586 14.3085 13.842 14.6752L14.2836 16.6002C14.6336 18.1168 13.8253 18.7085 12.4836 17.9168L10.617 16.8085C10.2753 16.6085 9.72531 16.6085 9.38364 16.8085L7.51696 17.9168C6.17529 18.7085 5.36695 18.1168 5.71695 16.6002L6.15864 14.6752C6.24198 14.3168 6.09196 13.8085 5.83363 13.5418L4.28364 11.9918C3.36698 11.0752 3.66696 10.1502 4.94196 9.94182L6.93364 9.60849C7.26697 9.55016 7.66697 9.2585 7.81697 8.9585L8.91698 6.7585C9.50864 5.56683 10.492 5.56683 11.0836 6.7585Z"
                                    stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M5 7.49984V1.6665" stroke="white" stroke-width="1.5" stroke-linecap="round"
                                    stroke-linejoin="round" />
                                <path d="M15 7.49984V1.6665" stroke="white" stroke-width="1.5" stroke-linecap="round"
                                    stroke-linejoin="round" />
                                <path d="M10 3.33317V1.6665" stroke="white" stroke-width="1.5" stroke-linecap="round"
                                    stroke-linejoin="round" />
                            </svg>


                        </div>
                        <p class="text-sm font-medium text-gray-500 truncate ml-14">Hot Trending</p>
                    </dt>
                    <dd class="flex items-baseline pb-2 ml-14 sm:pb-3">
                        <p class="text-2xl font-semibold text-gray-900">
                            @hotTrendingTagName
                        </p>
                    </dd>
                </div>

            </dl>
        </div>

    </div>
</div>

<div class="mt-2 overflow-hidden border-b border-gray-200 rounded-lg shadow intro-y">
    <table class="min-w-full divide-y divide-gray-200 ">
        <thead class="bg-tango-100">
            <tr>
                <th scope="col" class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                    #
                </th>
                <th scope="col" class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                    Name
                </th>
                <th scope="col" class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                    Status
                </th>
                <th scope="col" class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                    Total of post
                </th>
                <th scope="col" class="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                    Create Date
                </th>

                <th scope="col" class="relative px-6 py-3">
                    <span class="sr-only">View Post</span>
                </th>
            </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200 fade-in ">
            @for (int i = 0; i < listTags.Count; i++)
            {
                var listTagItem = listTags[i];
                var quantity = listTagItem["quantity"];
                var tag = (Tag)listTagItem["tag"];

                var link = $"{RoutersAdmin.PostGetPostByTag.Link}?name={tag.Name}";
                <tr class="duration-200 hover:bg-indigo-100">
                    <td class="px-6 py-4 text-sm font-medium text-gray-900 whitespace-nowrap ">
                        @(i+1)
                    </td>
                    <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                        @tag.Name
                    </td>

                    <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                        @await Html.PartialAsync("../../Components/Table/TableStatus.cshtml",tag.Status ==
                    TagStatus.ACTIVE)
                    </td>
                    <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                        @quantity
                    </td>
                    <td class="px-6 py-4 text-sm text-gray-500 whitespace-nowrap">
                        @tag.CreateDate
                    </td>
                    <td class="px-6 py-4 text-sm font-medium text-right whitespace-nowrap">
                        <a href="@link" class="text-indigo-600 hover:text-indigo-900">View Post</a>
                    </td>
                </tr>

            }
        </tbody>
    </table>
    <!-- This example requires Tailwind CSS v2.0+ -->
    @await Html.PartialAsync("../../Components/Pagination/Pagination.cshtml",
    new { PageIndex = (string) this.Context.Request.Query["pageIndex"] ?? "0", PageSize = (string)
    this.Context.Request.Query["pageSize"]?? "12", Total = total })
</div>


@section Scripts {

<script src="/js/tag-list.js"></script>
}

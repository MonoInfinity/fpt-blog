@using FPTBlog.Src.PostModule.Entity
@{
    ViewData["Title"] = Routers.PostGetSearch.Title;
    SelectList categories = (SelectList)this.ViewData["categories"];

    var posts = (List<PostViewModel>)this.ViewData["posts"];
}

<div class="px-4 mx-auto space-y-8 lg:mt-8 ">
    <h1 class="text-4xl font-semibold text-center">Search Post</h1>
    <form class="flex-1 space-y-2 intro-x">
        @await Html.PartialAsync("../../Components/Form/FormHidden.cshtml",
        new {Name="pageSize", Value="12"})
        @await Html.PartialAsync("../../Components/Form/FormHidden.cshtml",
        new {Name="indexPage", Value="0"})

        <div class="flex flex-col justify-center space-y-2 lg:space-y-0 lg:space-x-4 lg:items-end lg:flex-row">

            @await Html.PartialAsync("../../Components/Form/TextField.cshtml",
            new {Name="search", Label="Search", Type="text", Value= this.Context.Request.Query["search"]})

            @await Html.PartialAsync("../../Components/Form/FormDropList.cshtml",
            new {Name="categoryId", Label="Category", Value=this.Context.Request.Query["categoryId"], List=categories})
            <div class="pb-1">
                @await Html.PartialAsync("../../Components/Form/FormBtn.cshtml",
                new { Label="Search", Icon = "../../Components/Icons/Search.cshtml"})
            </div>
        </div>
    </form>
    <div>
        <ul class="grid gap-8 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 intro-y">
            @foreach (var item in posts)
            {
                @await Html.PartialAsync("../../Components/Post/InlinePost.cshtml", new {Value = item})
            }

        </ul>
    </div>
</div>

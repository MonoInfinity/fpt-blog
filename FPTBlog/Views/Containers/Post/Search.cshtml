@using FPTBlog.Src.PostModule.Entity
@{
    ViewData["Title"] = Routers.PostGetSearch.Title;
    SelectList categories = (SelectList)this.ViewData["categories"];

    var blogs = (List<PostViewModel>)this.ViewData["blogs"];
}

<div class="px-2 mx-auto mt-8 space-y-4 md:w-4/5 lg:w-3/5">
    <h1 class="text-4xl font-semibold text-center">Search Post</h1>
    <form class="flex-1 space-y-2 intro-x">
        @await Html.PartialAsync("../../Components/Form/FormHidden.cshtml",
        new {Name="pageSize", Value="12"})
        @await Html.PartialAsync("../../Components/Form/FormHidden.cshtml",
        new {Name="indexPage", Value="0"})

        <div class="flex space-x-4">

            @await Html.PartialAsync("../../Components/Form/TextField.cshtml",
            new {Name="search", Label="Search", Type="text", Value= this.Context.Request.Query["search"]})

            @await Html.PartialAsync("../../Components/Form/FormDropList.cshtml",
            new {Name="categoryId", Label="Category", Value=this.Context.Request.Query["categoryId"], List=categories})
        </div>
        <div class="md:w-1/5">

            @await Html.PartialAsync("../../Components/Form/FormBtn.cshtml",
            new { Label="Search "})
        </div>
    </form>
    <div>
        <ul class="space-y-4 intro-y">
            @foreach (var item in blogs)
            {
                @await Html.PartialAsync("../../Components/Post/SidePost.cshtml", new {Value = item})
            }

        </ul>
    </div>
</div>
